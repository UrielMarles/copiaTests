dotnet run --project FacturasAxoftConsole.csproj "Data Source=DESKTOP-FT8QR65\\NEWSERVER; Initial Catalog=FacturasAxoft; Integrated Security=True; TrustServerCertificate=True" "CargarFacturas" "D:\AXOFT\FacturasAxoft\XML\Ejemplo.xml"


public class Factura
{
    public int Id { get; set; }
    public int Numero { get; set; }
    public DateTime Fecha { get; set; }
    public int ClienteId { get; set; } // Clave foránea
    public Cliente Cliente { get; set; }
    public ICollection<RenglonFactura> Renglones { get; set; }
}
public class RenglonFactura
{
    public int Id { get; set; }
    public int FacturaId { get; set; } // Clave foránea
    public Factura Factura { get; set; }
    public int ArticuloId { get; set; } // Clave foránea
    public Articulo Articulo { get; set; }
    public int Cantidad { get; set; }
}
public class Articulo
{
    public int Id { get; set; }
    public string Codigo { get; set; }
    public string Descripcion { get; set; }
    public double Precio { get; set; }
    public ICollection<RenglonFactura> Renglones { get; set; }
}
public class Articulo
{
    public int Id { get; set; }
    public string Codigo { get; set; }
    public string Descripcion { get; set; }
    public double Precio { get; set; }
    public ICollection<RenglonFactura> Renglones { get; set; }
}


reglonFactura-> 
Total

FACTURA -> 
TotalSinImpuestos
Iva
ImporteIva
TotalConImpuestos



public class RenglonFactura
{
    public int Id { get; set; }
    public int FacturaId { get; set; } // Clave foránea
    public Factura Factura { get; set; }
    public int ArticuloId { get; set; } // Clave foránea
    public Articulo Articulo { get; set; }
    public int Cantidad { get; set; }
}
public class Factura
{
    public int Id { get; set; }
    public int Numero { get; set; }
    public DateTime Fecha { get; set; }
    public int ClienteId { get; set; } // Clave foránea
    public Cliente Cliente { get; set; }
    public ICollection<RenglonFactura> Renglones { get; set; }
}

CREATE TABLE Facturas (
    Id INT PRIMARY KEY,
    Numero INT,
    Fecha DATETIME,
    ClienteId INT,
    FOREIGN KEY (ClienteId) REFERENCES Clientes(Id)
);

CREATE TABLE RenglonesFactura (
    Id INT PRIMARY KEY,
    FacturaId INT,
    ArticuloId INT,
    Cantidad INT,
    FOREIGN KEY (FacturaId) REFERENCES Facturas(Id),
    FOREIGN KEY (ArticuloId) REFERENCES Articulos(Id)
);

INSERT INTO Articulos (Id, Codigo, Descripcion, Precio) VALUES
(1, 'A001', 'Articulo 1', 19.99),
(2, 'A002', 'Articulo 2', 29.95),
(3, 'A003', 'Articulo 3', 9.99);


INSERT INTO Facturas (Id, Numero, Fecha, ClienteId) VALUES
(1, 1001, '2024-01-16', 1),
(2, 1002, '2024-01-17', 2),
(3, 1003, '2024-01-18', 3);

INSERT INTO RenglonesFactura (Id, FacturaId, ArticuloId, Cantidad) VALUES
(1, 1, 1, 2),
(2, 1, 2, 1),
(3, 2, 3, 3),
(4, 3, 1, 1),
(5, 3, 2, 2);






















//Factura factura = this._context.Facturas.Find(1); -> test Conec
//Console.WriteLine($"Factura: Id={factura.Id}, Numero={factura.Numero}, Fecha={factura.Fecha}");